<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace表示命名空间 -->
<mapper namespace="com.syousui.mybatis.mapper.CustomerMapper">

  <!-- custom 为别名, 详见 mybatis-config.xml 文件 -->
  <!--全查-->
  <select id="findAll" resultType="customer">
    select * from t_customer where 1=1
  </select>

  <!--根据客户编号获取客户信息 way1-->
  <!--  <select id="findCustomerById" parameterType="Integer" resultType="customer">-->
  <!--		select * from t_customer where id = #{id}-->
  <!--	</select>-->

  <!--根据客户编号获取客户信息 way2-->
  <!--定义表的前缀名 -->
  <sql id="tablename"> ${prefix}customer </sql>
  <!--定义要查询的表 -->
  <sql id="someinclude">from
    <include refid="${include_target}"/>
  </sql>
  <!--定义查询列 -->
  <sql id="customerColumns"> id,username,jobs,phone </sql>
  <!--根据id查询客户信息 -->
  <select id="findCustomerById" parameterType="Integer" resultType="customer">
    select
    <include refid="customerColumns"/>
    <include refid="someinclude">
      <property name="prefix" value="t_"/>
      <property name="include_target" value="tablename"/>
    </include>
    where id = #{id}
  </select>

  <!-- 按用户名查询 -->
  <select id="findCustomerByName" parameterType="String" resultType="customer">
    select * from t_customer where username=#{username}
  </select>

  <!--根据客户名模糊查询客户信息列表-->
  <select id="findCustomerByName_vague" parameterType="String" resultType="customer">
    <!-- select * from t_customer where username like '%${value}%' -->
    select * from t_customer where username like concat('%',#{value},'%')
  </select>

  <!-- 添加客户信息 -->
  <insert id="insertCustomer" parameterType="customer">
	    insert into t_customer(username,jobs,phone)
	    values(#{username},#{jobs},#{phone})
	</insert>

  <!-- 更新客户信息 -->
  <update id="updateCustomer" parameterType="customer">
	    update t_customer set
	    username=#{username},jobs=#{jobs},phone=#{phone}
	    where id=#{id}
	</update>

  <!-- 删除客户信息 -->
  <delete id="deleteCustomer" parameterType="Integer">
	    delete from t_customer where id=#{id}
	</delete>


  <!--   <if>元素使用 -->
  <!--  <select id="findCustomerByNameAndJobs" parameterType="customer" resultType="customer">-->
  <!--    select * from t_customer where 1=1-->
  <!--    <if test="username !=null and username !=''">-->
  <!--      and username like concat('%',#{username},'%')-->
  <!--    </if>-->
  <!--    <if test="jobs !=null and jobs !=''">-->
  <!--      and jobs= #{jobs}-->
  <!--    </if>-->
  <!--  </select>-->

  <!--     <where>元素 -->
  <select id="findCustomerByNameAndJobs" parameterType="customer" resultType="customer">
    select * from t_customer
    <where>
      <if test="username !=null and username !=''">
        and username like concat('%',#{username},'%')
      </if>
      <if test="jobs !=null and jobs !=''">
        and jobs= #{jobs}
      </if>
    </where>
  </select>

  <!-- <trim>元素 -->
  <!--  <select id="findCustomerByNameAndJobs" parameterType="customer" resultType="customer">-->
  <!--    select * from t_customer-->
  <!--    <trim prefix="where" prefixOverrides="and">-->
  <!--      <if test="username !=null and username !=''">-->
  <!--        and username like concat('%',#{username}, '%')-->
  <!--      </if>-->
  <!--      <if test="jobs !=null and jobs !=''">-->
  <!--        and jobs= #{jobs}-->
  <!--      </if>-->
  <!--    </trim>-->
  <!--  </select>-->

  <!--<choose>(<when>、<otherwise>)元素使用 -->
  <select id="findCustomerByNameOrJobs" parameterType="customer" resultType="customer">
    select * from t_customer where 1=1
    <choose>
      <when test="username !=null and username !=''">
        and username like concat('%',#{username}, '%')
      </when>
      <when test="jobs !=null and jobs !=''">
        and jobs= #{jobs}
      </when>
      <otherwise>
        and phone is not null
      </otherwise>
    </choose>
  </select>

  <!-- <set>元素 -->
  <update id="updateCustomer_set" parameterType="customer">
    update t_customer
    <set>
      <if test="username !=null and username !=''">
        username=#{username},
      </if>
      <if test="jobs !=null and jobs !=''">
        jobs=#{jobs},
      </if>
      <if test="phone !=null and phone !=''">
        phone=#{phone},
      </if>
    </set>
    where id=#{id}
  </update>

  <!--<foreach>元素使用 -->
  <select id="findCustomerByIds" parameterType="List" resultType="customer">
    select * from t_customer where id in
    <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <!--<bind>元素的使用：根据客户名模糊查询客户信息 -->
  <select id="findCustomerByName_bind" parameterType="customer" resultType="customer">
    <!--_parameter.getUsername()也可直接写成传入的字段属性名，即username -->
    <bind name="pattern_username" value="'%'+_parameter.getUsername()+'%'"/>
    select * from t_customer where username like #{pattern_username}
  </select>

</mapper>
